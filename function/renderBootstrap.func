renderBootstrap() {

  local global_value_file="${ROOTDIR}/values/global.yaml"
  local git_repo=$(yq read -X ${global_value_file} 'system_repo')
  local argo_namespace=csas-argocd-sys

  for name in bootstrap custom-resources; do
    cp ${ROOTDIR}/script/init-values/bootstrap.default ${ROOTDIR}/resources/bootstrap/${name}.yaml
    yq write -i ${ROOTDIR}/resources/bootstrap/${name}.yaml 'metadata.name' ${name}
    yq write -i ${ROOTDIR}/resources/bootstrap/${name}.yaml 'metadata.namespace' ${argo_namespace}
    yq write -i ${ROOTDIR}/resources/bootstrap/${name}.yaml 'spec.source.repoURL' ${git_repo}
    yq write -i ${ROOTDIR}/resources/bootstrap/${name}.yaml 'spec.source.path' resources/${name}
    yq write -i ${ROOTDIR}/resources/bootstrap/${name}.yaml 'spec.destination.namespace' ${argo_namespace}
    yq write -i ${ROOTDIR}/resources/bootstrap/${name}.yaml 'spec.syncPolicy.syncOptions[0]' "CreateNamespace=false" 
  done

  {
    local workload_repo=$(yq read -X ${global_value_file} 'app_repo')
    cp ${ROOTDIR}/script/init-values/bootstrap.projects ${ROOTDIR}/resources/bootstrap/projects.yaml
    yq write -i ${ROOTDIR}/resources/bootstrap/projects.yaml 'spec.source.repoURL' ${workload_repo}
  }

}
