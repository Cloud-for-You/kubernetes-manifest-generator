renderBootstrap() {

  local global_value_file="${ROOTDIR}/values/global.yaml"
  local git_repo=$(yq read -X ${global_value_file} 'system_repo')
  local argo_namespace=csas-argocd-sys

  for name in bootstrap custom-resources; do
    cp ${ROOTDIR}/script/init-values/bootstrap.default ${ROOTDIR}/resources/bootstrap/${name}.yaml
    yq write -i ${ROOTDIR}/resources/bootstrap/${name}.yaml 'metadata.name' ${name}
    yq write -i ${ROOTDIR}/resources/bootstrap/${name}.yaml 'metadata.namespace' ${argo_namespace}
    yq write -i ${ROOTDIR}/resources/bootstrap/${name}.yaml 'spec.source.repoURL' ${git_repo}
    yq write -i ${ROOTDIR}/resources/bootstrap/${name}.yaml 'spec.source.path' resources/${name}
    yq write -i ${ROOTDIR}/resources/bootstrap/${name}.yaml 'spec.destination.namespace' ${argo_namespace}
    yq write -i ${ROOTDIR}/resources/bootstrap/${name}.yaml 'spec.syncPolicy.syncOptions[0]' "CreateNamespace=false" 
  done

cat <<EOF > "${ROOTDIR}/resources/bootstrap/projects.yaml"
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/sync-options: Prune=false
  name: projects
  namespace: csas-argocd-sys
spec:
  destination:
    namespace: csas-argocd-sys
    server: 'https://kubernetes.default.svc'
  project: default
  source:
    directory:
      jsonnet: {}
      recurse: true
    path: .
    repoURL: 'ssh://git@sdf.csin.cz:2222/ocp4/ocp-oaz-deva-project.git'
    targetRevision: master
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
EOF

}
