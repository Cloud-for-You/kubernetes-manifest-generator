renderBootstrap() {

  local global_value_file="${ROOTDIR}/values/global.yaml"
  local git_repo=$(yq read -X ${global_value_file} 'system_repo')
  local argo_namespace=csas-argocd-sys

  local CLUSTER_NAME=$(yq read ${ROOTDIR}/values/global.yaml clusterName | tr '[:lower:]' '[:upper:]')

  local name=bootstrap
  cp ${ROOTDIR}/script/init-values/bootstrap.default ${ROOTDIR}/.FINAL_RESOURCES/bootstrap/${name}.yaml
  getBootstrap "${name}" "" "${argo_namespace}"
  yq write -i ${ROOTDIR}/.FINAL_RESOURCES/bootstrap/${name}.yaml 'spec.syncPolicy.syncOptions[0]' "CreateNamespace=false"

  local workload_repo=$(yq read -X ${global_value_file} 'app_repo')
  cp ${ROOTDIR}/script/init-values/bootstrap.projects ${ROOTDIR}/.FINAL_RESOURCES/bootstrap/projects.yaml
  yq write -i ${ROOTDIR}/.FINAL_RESOURCES/bootstrap/projects.yaml 'spec.source.repoURL' ${workload_repo}
  yq write -i ${ROOTDIR}/.FINAL_RESOURCES/bootstrap/projects.yaml 'spec.project' onboarding
  yq write -i ${ROOTDIR}/.FINAL_RESOURCES/bootstrap/projects.yaml 'spec.source.path' _PROJECTS_
  yq write -i ${ROOTDIR}/.FINAL_RESOURCES/bootstrap/projects.yaml 'spec.source.targetRevision' openshift

}
