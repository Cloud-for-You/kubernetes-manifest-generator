render_kustomize() {
  local name="${1}"
  local version="${2}"
  local repository="${3:-ocp-generic}"

#  echo "Render kustomize ${name} ${version}"
#  echo "Artefact URL: https://artifactory.csin.cz/artifactory/${repository}/csas/${name}/${name}-${version}.zip"

  mkdir -p tmp/render/${name}/templates

  local values_file="values/${name}.yaml"

  local num=$(yq read "${values_file}" --length patches)
  local i
  for (( i=0; i < "${num}"; ++i )); do
    yq read -X "${values_file}" patches.[${i}]
    echo "---"
  done > tmp/render/${name}/patches.yaml

cat <<EOF > "tmp/render/${name}/kustomization.yaml"
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: ${name}
resources:
- https://artifactory.csin.cz/artifactory/${repository}/csas/${name}/${name}-${version}.zip
patchesStrategicMerge:
- patches.yaml
${patches}
configMapGenerator:
$(yq read -X "${values_file}" configMapGenerators)
EOF

  kustomize build tmp/render/${name}/ -o tmp/render/${name}/templates

  if [ $? -eq 0 ]; then
    rm -rf resources/${name}
    [ -d resources/${name} ] || mkdir -p resources/${name}
    [ ! -d tmp/render/${name}/crds ] || mv tmp/render/${name}/crds resources/${name}
    [ ! -d tmp/render/${name}/templates ] || mv tmp/render/${name}/templates resources/${name}
    rm -rf tmp/render/${name}
  fi

}
